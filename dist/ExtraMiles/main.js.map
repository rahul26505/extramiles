{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-router.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.module.ts","webpack:///./src/app/home/home/home.component.css","webpack:///./src/app/home/home/home.component.html","webpack:///./src/app/home/home/home.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/navbar/navbar.module.ts","webpack:///./src/app/registration/firebase-registration.service.ts","webpack:///./src/app/registration/login/login.component.css","webpack:///./src/app/registration/login/login.component.html","webpack:///./src/app/registration/login/login.component.ts","webpack:///./src/app/registration/register/register.component.css","webpack:///./src/app/registration/register/register.component.html","webpack:///./src/app/registration/register/register.component.ts","webpack:///./src/app/registration/registration.module.ts","webpack:///./src/app/shared/click-to-close.directive.ts","webpack:///./src/app/shared/data.service.ts","webpack:///./src/app/shared/dropdown.directive.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home/home.component';\r\nimport { RegisterComponent } from './registration/register/register.component';\r\nimport { LoginComponent } from './registration/login/login.component';\r\n\r\n\nconst appRoutes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'login', component: LoginComponent }\n];\n@NgModule({\n  imports: [\n    RouterModule.forRoot(appRoutes)\n  ],\n  exports: [RouterModule]\n})\nexport class AppRouterModule { }\n","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport * as firebase from 'firebase';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  ngOnInit() {\n    firebase.initializeApp({\n      apiKey: \"AIzaSyC6vZIWY0UGQW-6AfIfK12gKUJ7IM42IUA\",\r\n      authDomain: \"extramiles-8ff2b.firebaseapp.com\"\n    });\r\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { RegistrationModule } from './registration/registration.module';\r\nimport { NavbarModule } from './navbar/navbar.module';\r\nimport { HomeModule } from './home/home.module';\r\nimport { AppRouterModule } from './app-router.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    RegistrationModule,\r\n    NavbarModule,\r\n    HomeModule,\r\n    HttpClientModule,\r\n    AppRouterModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './home/home.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [HomeComponent],\n  exports: [HomeComponent]\n})\nexport class HomeModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  home works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-sm navbar-dark bg-dark mb-3\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\" role=\\\"button\\\">\\r\\n      Extra Miles</a>\\r\\n    <ul class=\\\"nav navbar-nav navbar-right\\\">\\r\\n      <li style=\\\"cursor: pointer;\\\" class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/register\\\">Register</a>\\r\\n      </li>\\r\\n      <li style=\\\"cursor: pointer;\\\" class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\">Log in</a>\\r\\n      </li>\\r\\n      <li style=\\\"cursor: pointer;\\\" class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/logout\\\">Log out</a>\\r\\n      </li>\\r\\n      <li class=\\\"mx-2\\\">\\r\\n        <a routerLink=\\\" / \\\" class=\\\"btn btn-danger\\\" role=\\\"button \\\">Average Rating:NA</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item dropdown mx-2\\\">\\r\\n        <a style=\\\"cursor: pointer;color: white;\\\" class=\\\"dropdown-toggle btn btn-danger\\\" data-toggle=\\\"dropdown \\\" role=\\\"button\\\">Rahul Kumar</a>\\r\\n        <div class=\\\"dropdown-menu \\\">\\r\\n          <a class=\\\"dropdown-item \\\">Link 1</a>\\r\\n          <a class=\\\"dropdown-item \\\">Link 2</a>\\r\\n          <a class=\\\"dropdown-item \\\">Link 3</a>\\r\\n        </div>\\r\\n      </li>\\r\\n      <li style=\\\"cursor: pointer; \\\" class=\\\"nav-item \\\">\\r\\n        <a class=\\\"btn btn-danger \\\" routerLink=\\\"/help \\\" role=\\\"button\\\">Help</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</nav>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NavbarComponent } from './navbar.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { RouterModule } from '@angular/router';\r\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule\n  ],\n  declarations: [NavbarComponent],\n  exports: [NavbarComponent]\n\n})\nexport class NavbarModule { }\n","import { Injectable } from '@angular/core';\nimport * as firebase from 'firebase';\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseRegistrationService {\n\n  constructor() { }\n  userRegistration(email: string, password: string) {\r\n    firebase.auth().createUserWithEmailAndPassword(email, password)\n      .catch(\n        error => console.log(error)\n      )\r\n  }\n  userLogin(email: string, password: string) {\n    firebase.auth().signInWithEmailAndPassword(email, password)\n      .then(\n      response => {\n        console.log('user signed in');\n        }\n      )\n      .catch(\n        error => console.log(error)\n      );\r\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container text-center\\\" style=\\\"align-self:center;width:400px;padding-top:40px\\\">\\r\\n  <div class=\\\"jumbotron\\\" style=\\\"width:400px;position:center\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n        <form (ngSubmit)=\\\"onSubmit(f)\\\" #f=\\\"ngForm\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-12 form-group\\\">\\r\\n              <label for=\\\"userid\\\">User Id</label>\\r\\n              <input type=\\\"email\\\" id=\\\"userid\\\" class=\\\"form-control\\\" name=\\\"userid\\\" ngModel required>\\r\\n            </div>\\r\\n          </div>\\r\\n          <br />\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-12 form-group\\\">\\r\\n              <label for=\\\"password\\\">Password</label>\\r\\n              <input type=\\\"password\\\" id=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" ngModel required>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-xs-12\\\">\\r\\n              <button class=\\\"btn btn-success\\\" type=\\\"submit\\\">Login </button>&nbsp;\\r\\n              <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"onClear(f)\\\">Clear</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { FirebaseRegistrationService } from '../firebase-registration.service';\nimport { DataService } from '../../shared/data.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  constructor(\n    private fbrs: FirebaseRegistrationService,\n    private dataService: DataService\n  ) {}\n\n  ngOnInit() {}\n  onSubmit(form: NgForm) {\n    let value = form.value;\n    this.fbrs.userLogin(value.userid, value.password);\n    console.log('login component');\n    this.dataService.login(value.userid, value.password).subscribe(() => {});\n  }\n  onClear(f) {\n    f.reset();\n  }\n}\n","module.exports = \"@media(min-width: 768px) {\\r\\n    .field-label-responsive {\\r\\n      padding-top: .5rem;\\r\\n      text-align: right;\\r\\n    }\\r\\n  }\"","module.exports = \"<div class=\\\"container\\\">\\n  <form class=\\\"form-horizontal\\\" role=\\\"form\\\" (ngSubmit)=\\\"onSubmit(f)\\\" #f=\\\"ngForm\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3\\\"></div>\\n      <div class=\\\"col-md-6\\\">\\n        <h2>Register New User</h2>\\n        <hr>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3 field-label-responsive\\\">\\n        <label for=\\\"name\\\">Name</label>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n            <div class=\\\"input-group-addon\\\" style=\\\"width: 2.6rem\\\">\\n              <i class=\\\"fa fa-user\\\"></i>\\n            </div>\\n            <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"Rahul Kumar\\\" required autofocus ngModel>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-control-feedback\\\">\\n          <span class=\\\"text-danger align-middle\\\">\\n            Please enter your full name !\\n          </span>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3 field-label-responsive\\\">\\n        <label for=\\\"email\\\">E-Mail Address</label>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n            <div class=\\\"input-group-addon\\\" style=\\\"width: 2.6rem\\\">\\n              <i class=\\\"fa fa-at\\\"></i>\\n            </div>\\n            <input type=\\\"text\\\" name=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" placeholder=\\\"you@example.com\\\" required ngModel>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-control-feedback\\\">\\n          <span class=\\\"text-danger align-middle\\\">\\n            Please enter a valid email address !\\n          </span>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3 field-label-responsive\\\">\\n        <label for=\\\"email\\\">User Role</label>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n            <div class=\\\"input-group-addon\\\" style=\\\"width: 2.6rem\\\">\\n              <i class=\\\"fa fa-at\\\"></i>\\n            </div>\\n            <select name=\\\"userRole\\\" id=\\\"userRole\\\" class=\\\"form-control\\\" required ngModel>\\n              <option value=\\\"\\\" selected>Select Role</option>\\n              <option value=\\\"manager\\\">Manager(Job Provider)</option>\\n              <option value=\\\"associate\\\">Associate(Job Seeker)</option>\\n            </select>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-control-feedback\\\">\\n          <span class=\\\"text-danger align-middle\\\">\\n            Please select a User Role !\\n          </span>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3 field-label-responsive\\\">\\n        <label for=\\\"password\\\">Password</label>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group has-danger\\\">\\n          <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n            <div class=\\\"input-group-addon\\\" style=\\\"width: 2.6rem\\\">\\n              <i class=\\\"fa fa-key\\\"></i>\\n            </div>\\n            <input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" placeholder=\\\"Password\\\" required ngModel>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-control-feedback\\\">\\n          <span class=\\\"text-danger align-middle\\\">\\n            <i class=\\\"fa fa-close\\\"> {{errorMessage}}</i>\\n          </span>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3 field-label-responsive\\\">\\n        <label for=\\\"password\\\">Confirm Password</label>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n            <div class=\\\"input-group-addon\\\" style=\\\"width: 2.6rem\\\">\\n              <i class=\\\"fa fa-repeat\\\"></i>\\n            </div>\\n            <input type=\\\"password\\\" name=\\\"confirmPass\\\" class=\\\"form-control\\\" id=\\\"confirmPass\\\" placeholder=\\\"Password\\\" ngModel required>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3\\\"></div>\\n      <div class=\\\"col-md-6\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-success mx-3\\\" style=\\\"float: right\\\">\\n          <i class=\\\"fa fa-user-plus\\\"></i> Register</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" style=\\\"float: right\\\" (click)=\\\"onClear(f)\\\">\\n          <i class=\\\"fa fa-user-plus\\\"></i> Reset</button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { FirebaseRegistrationService } from '../firebase-registration.service';\nimport { DataService } from '../../shared/data.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  errorMessage = '';\n  constructor(\n    private fbrs: FirebaseRegistrationService,\n    private dataService: DataService\n  ) {}\n\n  ngOnInit() {}\n  onSubmit(form: NgForm) {\n    let value = form.value;\n    if (value.password != value.confirmPass) {\n      this.errorMessage = 'password mismatch';\n    }\n    console.log(form);\n  }\n  onClear(form: NgForm) {\n    form.reset();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n\n    declarations: [RegisterComponent, LoginComponent],\n  exports: [RegisterComponent,  LoginComponent]\n})\nexport class RegistrationModule { }\n","import { Directive, HostBinding, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[appClickToClose]'\n})\nexport class ClickToCloseDirective {\n\n  constructor() { }\n\n  @HostBinding('class.open') isOpen = false;\n\n  @HostListener('click') closeOpenDropdown() {}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport 'rxjs/add/operator/map';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  result;\n  token;\n  constructor(private httpClient: HttpClient) {}\n\n  login(email: string, password: string) {\n    console.log('data service works');\n    return this.httpClient\n      .post('/login', {\n        userid: email,\n        password: password\n      })\n      .map(result => {\n        this.result = result;\n        this.token = this.result.data.token;\n        console.log(this.token);\n      });\n  }\n\n  registerUser(email: string, password: string) {\n    console.log('email');\n    return this.httpClient.post('/registration', {\n      userid: email,\n      password: password\n    });\n  }\n}\n","import { Directive, HostBinding, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[appDropdown]'\n})\nexport class DropdownDirective {\n\n  constructor() { }\n\n  @HostBinding('class.open') isOpen = false;\n  @HostListener('click') toggleOpen() {\n    this.isOpen = !this.isOpen;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DropdownDirective } from './dropdown.directive';\nimport { ClickToCloseDirective } from './click-to-close.directive';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [DropdownDirective, ClickToCloseDirective],\n  exports: [\n    DropdownDirective,\n    ClickToCloseDirective\n  ]\n})\nexport class SharedModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}